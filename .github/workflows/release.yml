name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    env:
      # Electron-Builder expects CSC_LINK/CSC_KEY_PASSWORD
      CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
      CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Build and publish (macOS unsigned)
        if: runner.os == 'macOS'
        run: npx electron-builder --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_CACHE: ${{ runner.temp }}/.cache/electron-builder
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build and publish (Windows signed)
        if: runner.os == 'Windows' && env.CSC_LINK != '' && env.CSC_KEY_PASSWORD != ''
        run: |
          echo "Signing: CSC_LINK length %{{ env.CSC_LINK }}%" | powershell -Command "$env:CSC_LINK.Length"
          npx electron-builder --publish always
        env:
          ELECTRON_BUILDER_CACHE: ${{ runner.temp }}\\.cache\\electron-builder

      - name: Build and publish (Windows unsigned)
        if: runner.os == 'Windows' && (env.CSC_LINK == '' || env.CSC_KEY_PASSWORD == '')
        run: npx electron-builder --publish always
        env:
          ELECTRON_BUILDER_CACHE: ${{ runner.temp }}\\.cache\\electron-builder
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build and publish (Linux)
        if: runner.os == 'Linux'
        run: npx electron-builder --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ELECTRON_BUILDER_CACHE: ${{ runner.temp }}/.cache/electron-builder
